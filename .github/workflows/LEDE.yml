
name: Build LEDE

on:
  workflow_dispatch:

env:
  REPO: config/git
  CONFIG_FILE: config/A.config
  Shell_0: sh
  Shell_1: sh/shell-1.sh
  Shell_2: sh/shell-2.sh

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.5

    - name: 环境部署
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/NueXini/BuildOpenWrt/master/.github/workflows/BuildEnviroment)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: 克隆源码
      run: |
        git=$(head -n 1 $REPO)
        git clone $git --single-branch nuexini
    
    - name: 加载Shell-1脚本
      run: |
        chmod +x $GITHUB_WORKSPACE/$Shell_0/*.sh
        chmod +x $Shell_1
        cd nuexini
        $GITHUB_WORKSPACE/$Shell_1

    - name: 更新 & 安装 feeds
      run: |
        cd nuexini
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: 加载Shell-2脚本
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE nuexini/.config
        chmod +x $Shell_2
        cd nuexini
        $GITHUB_WORKSPACE/$Shell_2
        
    - name: 输出调试信息
      run: |
        cd nuexini
        cat feeds/x/base-config-setting/files/uci.defaults
        cat package/base-files/files/etc/banner
        cat feeds/luci/modules/luci-base/luasrc/dispatcher.lua

    - name: 下载dl库
      run: |
        cd nuexini
        make defconfig
        make download -j8
        rm -rf $(find ./dl/ -size -1024c)

    - name: 编译固件
      run: |
        cd nuexini
        make -j8 || make -j1 V=sc
    
    - name: 上传固件
      uses: actions/upload-artifact@v2.2.4
      with:
        name: Firmware
        path: nuexini/bin/targets

    - name: 上传bin目录(包含插件与固件)
      uses: actions/upload-artifact@v2.2.4
      with:
        name: Bin
        path: nuexini/bin

#####
######
