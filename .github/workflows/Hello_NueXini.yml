
name: Hello NueXini

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - config: 'R3G.config'
          - config: 'R3.config'

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(cat ./.github/workflows/BuildEnviroment)
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean

    - name: Build
      run: |
        releasetag=$(cat ./config/releasetag.list | awk 'NR==1')
        git clone $releasetag nuexini
        chmod +x ./sh/*.sh
        cd nuexini
        ../sh/Hello_NueXini.sh
        ./scripts/feeds update -a && ./scripts/feeds install -a
        cp -rf ../config/${{ matrix.config }} ./.config
        ../sh/Hi_NueXini.sh
        make defconfig
        make download -j8
        rm -rf $(find ./dl/ -size -1024c)
        make -j8 || make -j1 V=sc >> ./make-error.log 2>&1
    
    - name: Upload error log
      uses: actions/upload-artifact@master
      if: failure()
      with:
        name: build-failure-log
        path: nuexini/make-error.log
    
    - name: Upload Firmware
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Firmware
        path: nuexini/bin/targets

    - name: Upload Packages
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Packages
        path: nuexini/bin/packages
        
    - name: Hello NueXini
      run: |
        zip -q -r Bin-NueXini.zip ./nuexini/bin/
        ./sh/z.cowtransfer.sh
        ./cowtransfer-uploader -s -p 64 Bin-NueXini.zip 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

##### $GITHUB_WORKSPACE ######
###### ###### ###### ###### ###### 
